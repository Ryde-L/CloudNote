<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="graduation.project.sgu.cloudnote.eureka.client.web.dao.mapper.NoteBookMapper" >

  <resultMap id="NoteBookResultMap" type="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBook" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="deletable" property="deletable" jdbcType="INTEGER" />
<!--    <collection property="noteList" ofType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.Note">-->
<!--      <id column="note_id" property="id"/>-->
<!--      <result column="note_book_id" property="noteBookId"/>-->
<!--      <result column="note_title" property="title"/>-->
<!--    </collection>-->
  </resultMap>



  <sql id="nick_name_columns">
    nb.id note_book_id ,nb.user_id,nb.title,nb.deletable
  </sql>
  <sql id="Base_Columns_With_Namespace" >
    nb.id, nb.user_id, nb.title, nb.deletable
  </sql>


  <select id="selectByIdContainsNoteList" resultMap="NoteBookResultMap">
    select
    <include refid="Base_Columns_With_Namespace"/> ,<include refid="graduation.project.sgu.cloudnote.eureka.client.web.dao.mapper.NoteMapper.nick_name_columns"/>
    from note_book nb
    left join note n on nb.id=n.note_book_id
    where nb.id=#{param1}
  </select>






  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, title, deletable
  </sql>
  <select id="selectByExample" resultMap="NoteBookResultMap" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from note_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="NoteBookResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from note_book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from note_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBookExample" >
    delete from note_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBook" >
    insert into note_book (id, user_id, title, 
      deletable)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{deletable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBook" >
    insert into note_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="deletable != null" >
        deletable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="deletable != null" >
        #{deletable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBookExample" resultType="java.lang.Integer" >
    select count(*) from note_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update note_book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.deletable != null" >
        deletable = #{record.deletable,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update note_book
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      deletable = #{record.deletable,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBook" >
    update note_book
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="deletable != null" >
        deletable = #{deletable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="graduation.project.sgu.cloudnote.eureka.client.web.pojo.NoteBook" >
    update note_book
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      deletable = #{deletable,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>